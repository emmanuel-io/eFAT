digraph "eEFPrvVolumeFindInGPT"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="eEFPrvVolumeFindInGPT",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Find an FAT volume in GPT (It supports only generic partitioning rules, MBR, GPT and SFD)"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="eEFPortMemCompare",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ef__port__memory_8c.html#ad67e0f283a83a3e42a9b014d252fdc55",tooltip="Compare memory block."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="eEFPrvFSSectorCheck",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ef__prv__volume_8c.html#af05aa78d25558bd9c60d9f79207d477e",tooltip="Load a sector and check if it is an FAT VBR."];
  Node3 -> Node2 [id="edge3_Node000003_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node4 [id="edge4_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="eEFPrvFSWindowLoad",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ef__prv__fs__window_8c.html#aaa333640bae9bd8d1343ce84759d2057",tooltip="Load disk access window in the filesystem object."];
  Node4 -> Node5 [id="edge5_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="eEFPrvDriveRead",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ef__prv__drive_8c.html#aba16ac504590c2d8048494b67d92c42f",tooltip="Read Sector(s)"];
  Node4 -> Node6 [id="edge6_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="eEFPrvFSWindowStore",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ef__prv__fs__window_8c.html#a791d630d91cc407405d6af1b502ed060",tooltip="Store disk access window in the filesystem object."];
  Node6 -> Node7 [id="edge7_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="eEFPrvDriveWrite",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ef__prv__drive_8c.html#a20cbf61d32f19140642ab9449495fd02",tooltip="Write Sector(s)"];
  Node3 -> Node8 [id="edge8_Node000003_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="u16EFPortLoad",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ef__port__load__store_8c.html#a89759d8764558079eda50fba369fb1dc",tooltip="Load a 2-byte little-endian word."];
  Node1 -> Node4 [id="edge9_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge10_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="eEFPrvGPTHeaderTest",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__group_f_u_n_c_t_i_o_n___g_p_t.html#gaec8b3b6e8a67c765eb47d76db9c372ed",tooltip="Check validity of GPT header."];
  Node9 -> Node2 [id="edge11_Node000009_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node10 [id="edge12_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="u32EFPortLoad",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ef__port__load__store_8c.html#ae58446622f3e668a58f135d246d2f968",tooltip="Load a 4-byte little-endian word."];
  Node9 -> Node11 [id="edge13_Node000009_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="u32ffCRC32",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__group_f_u_n_c_t_i_o_n___g_p_t.html#ga198468abbe16ad4fcdbcc20620783605",tooltip="Calculate CRC32 in byte-by-byte."];
  Node1 -> Node10 [id="edge14_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge15_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="u64EFPortLoad",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$ef__port__load__store_8c.html#a7c94b3154905c218cf29e4d26fd6ccc9",tooltip="Load a 8-byte little-endian word."];
}
